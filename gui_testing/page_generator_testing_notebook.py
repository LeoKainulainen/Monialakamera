#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.21
#  in conjunction with Tcl version 8.6
#    Mar 07, 2019 12:26:11 AM EET  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import page_generator_testing_notebook_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    page_generator_testing_notebook_support.set_Tk_var()
    top = Toplevel1 (root)
    page_generator_testing_notebook_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    page_generator_testing_notebook_support.set_Tk_var()
    top = Toplevel1 (w)
    page_generator_testing_notebook_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font23 = "-family {DejaVu Sans} -size 0"
        font9 = "-family {DejaVu Sans} -size 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1351x695+-10+14")
        top.title("New Toplevel")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top, font=('DejaVu Sans', 12, ), bg=_bgcolor
                ,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(top)
        self.TNotebook1.place(relx=0.0, rely=0.0, relheight=0.997
                , relwidth=1.001)
        self.TNotebook1.configure(width=1352)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t0 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t0, padding=3)
        self.TNotebook1.tab(0, text="CameraUI",compound="left",underline="-1",)
        self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(1, text="Shelve Explorer", compound="none"
                ,underline="-1", )
        self.TNotebook1_t2 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t2, padding=3)
        self.TNotebook1.tab(2, text="IDS Settings", compound="left"
                ,underline="-1", )

        self.Canvas1 = tk.Canvas(self.TNotebook1_t0)
        self.Canvas1.place(relx=0.0, rely=0.299, relheight=0.643, relwidth=0.808)

        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(relief='ridge')
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(width=1091)

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.007, rely=0.015, height=28, width=101)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Load Shelve''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.007, rely=0.09, height=28, width=99)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Save Shelve''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.319, rely=0.015, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Button''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.015, rely=0.149, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.378, rely=0.015, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Button''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.437, rely=0.015, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Button''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.281, rely=0.075, height=28, width=119)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Load Participants''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.378, rely=0.075, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Button''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.437, rely=0.075, height=28, width=99)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Save Results''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.319, rely=0.134, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.378, rely=0.134, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.437, rely=0.134, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.319, rely=0.224, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.378, rely=0.224, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.437, rely=0.224, height=28, width=69)
        self.Button1.configure(activebackground="#f9f9f9")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.926, rely=0.015, height=98, width=89)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''STOP TIMER''')
        self.Button1.configure(wraplength="70")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.778, rely=0.015, height=98, width=89)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''START (TIMER) (CAPTURE)''')
        self.Button1.configure(wraplength="70")

        self.Scale1 = tk.Scale(self.TNotebook1_t0, from_=0.0, to=100.0)
        self.Scale1.place(relx=0.007, rely=0.94, relwidth=0.799, relheight=0.0
                , height=40, bordermode='ignore')
        self.Scale1.configure(activebackground="#f9f9f9")
        self.Scale1.configure(font="-family {DejaVu Sans} -size 12")
        self.Scale1.configure(length="1074")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#d9d9d9")

        self.Scale1 = tk.Scale(self.TNotebook1_t0, from_=0.0, to=100.0)
        self.Scale1.place(relx=0.007, rely=0.224, relwidth=0.302, relheight=0.0
                , height=40, bordermode='ignore')
        self.Scale1.configure(activebackground="#f9f9f9")
        self.Scale1.configure(font="-family {DejaVu Sans} -size 12")
        self.Scale1.configure(length="404")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#d9d9d9")

        self.Text2 = tk.Text(self.TNotebook1_t0)
        self.Text2.place(relx=0.733, rely=0.239, relheight=0.054, relwidth=0.079)

        self.Text2.configure(background="white")
        self.Text2.configure(font=font9)
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(width=106)
        self.Text2.configure(wrap='word')

        self.Text2 = tk.Text(self.TNotebook1_t0)
        self.Text2.place(relx=0.615, rely=0.239, relheight=0.054, relwidth=0.116)

        self.Text2.configure(background="white")
        self.Text2.configure(font=font9)
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(width=156)
        self.Text2.configure(wrap='word')

        self.Text2 = tk.Text(self.TNotebook1_t0)
        self.Text2.place(relx=0.652, rely=0.045, relheight=0.054, relwidth=0.116)

        self.Text2.configure(background="white")
        self.Text2.configure(font=font9)
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(width=156)
        self.Text2.configure(wrap='word')

        self.Text2 = tk.Text(self.TNotebook1_t0)
        self.Text2.place(relx=0.533, rely=0.045, relheight=0.054, relwidth=0.116)

        self.Text2.configure(background="white")
        self.Text2.configure(font=font9)
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(width=156)
        self.Text2.configure(wrap='word')

        self.Entry1 = tk.Entry(self.TNotebook1_t0)
        self.Entry1.place(relx=0.089, rely=0.09,height=21, relwidth=0.123)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="-family {DejaVu Sans Mono} -size 12")
        self.Entry1.configure(selectbackground="#c4c4c4")

        self.Entry1 = tk.Entry(self.TNotebook1_t0)
        self.Entry1.place(relx=0.089, rely=0.03,height=21, relwidth=0.123)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="-family {DejaVu Sans Mono} -size 12")
        self.Entry1.configure(selectbackground="#c4c4c4")

        self.Label3 = tk.Label(self.TNotebook1_t0)
        self.Label3.place(relx=0.615, rely=0.209, height=18, width=156)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(text='''Strip Time''')

        self.Label3 = tk.Label(self.TNotebook1_t0)
        self.Label3.place(relx=0.533, rely=0.015, height=18, width=156)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(text='''Current Time''')

        self.Label3 = tk.Label(self.TNotebook1_t0)
        self.Label3.place(relx=0.652, rely=0.015, height=18, width=156)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(text='''Timer''')

        self.Label3 = tk.Label(self.TNotebook1_t0)
        self.Label3.place(relx=0.733, rely=0.209, height=18, width=96)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(text='''BIB NUM''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.852, rely=0.015, height=98, width=89)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''PAUSE (CAPTURE)''')
        self.Button1.configure(wraplength="70")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.533, rely=0.104, height=38, width=149)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''+10000 frames''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.652, rely=0.104, height=38, width=149)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''- 10000 frames''')

        self.Scale1 = tk.Scale(self.TNotebook1_t0, from_=0.0, to=100.0)
        self.Scale1.place(relx=0.533, rely=0.149, relwidth=0.236, relheight=0.0
                , height=40, bordermode='ignore')
        self.Scale1.configure(activebackground="#f9f9f9")
        self.Scale1.configure(font="-family {DejaVu Sans} -size 12")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#d9d9d9")

        self.TSeparator2 = ttk.Separator(self.TNotebook1_t0)
        self.TSeparator2.place(relx=0.007, rely=0.209, relwidth=0.519)

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.822, rely=0.224, height=38, width=89)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''<-''')
        self.Button1.configure(width=89)
        self.Button1.configure(wraplength="70")

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.904, rely=0.224, height=38, width=89)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''->''')
        self.Button1.configure(wraplength="70")

        self.TSeparator4 = ttk.Separator(self.TNotebook1_t0)
        self.TSeparator4.place(relx=0.526, rely=0.0, relheight=0.299)
        self.TSeparator4.configure(orient="vertical")

        self.Labelframe1 = tk.LabelFrame(self.TNotebook1_t0)
        self.Labelframe1.place(relx=0.815, rely=0.291, relheight=0.649
                , relwidth=0.178)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(text='''Results & YOLOv3 Objects''')
        self.Labelframe1.configure(width=240)

        self.Radiobutton2 = tk.Radiobutton(self.TNotebook1_t0)
        self.Radiobutton2.place(relx=0.222, rely=0.164, relheight=0.03
                , relwidth=0.078)
        self.Radiobutton2.configure(justify='left')
        self.Radiobutton2.configure(text='''Right To Left''')

        self.Radiobutton2 = tk.Radiobutton(self.TNotebook1_t0)
        self.Radiobutton2.place(relx=0.148, rely=0.164, relheight=0.03
                , relwidth=0.075)
        self.Radiobutton2.configure(activebackground="#f9f9f9")
        self.Radiobutton2.configure(cursor="fleur")
        self.Radiobutton2.configure(justify='left')
        self.Radiobutton2.configure(text='''Left To Right''')
        self.Radiobutton2.configure(width=101)

        self.Canvas3 = tk.Canvas(self.TNotebook1_t1)
        self.Canvas3.place(relx=0.007, rely=0.284, relheight=0.524
                , relwidth=0.779)
        self.Canvas3.configure(borderwidth="2")
        self.Canvas3.configure(relief='ridge')
        self.Canvas3.configure(selectbackground="#c4c4c4")
        self.Canvas3.configure(width=1051)

        self.Button3 = tk.Button(self.TNotebook1_t1)
        self.Button3.place(relx=0.326, rely=0.209, height=48, width=119)
        self.Button3.configure(activebackground="#f9f9f9")
        self.Button3.configure(text='''Go Left''')

        self.Button3 = tk.Button(self.TNotebook1_t1)
        self.Button3.place(relx=0.422, rely=0.209, height=48, width=129)
        self.Button3.configure(activebackground="#f9f9f9")
        self.Button3.configure(text='''Go Right''')

        self.Text1 = tk.Text(self.TNotebook1_t1)
        self.Text1.place(relx=0.526, rely=0.209, relheight=0.069, relwidth=0.16)
        self.Text1.configure(background="white")
        self.Text1.configure(font=font9)
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(width=216)
        self.Text1.configure(wrap='word')

        self.Text1 = tk.Text(self.TNotebook1_t1)
        self.Text1.place(relx=0.689, rely=0.209, relheight=0.069, relwidth=0.093)

        self.Text1.configure(background="white")
        self.Text1.configure(font=font9)
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(width=126)
        self.Text1.configure(wrap='word')

        self.Label2 = tk.Label(self.TNotebook1_t1)
        self.Label2.place(relx=0.533, rely=0.164, height=18, width=206)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(text='''Time''')

        self.Label2 = tk.Label(self.TNotebook1_t1)
        self.Label2.place(relx=0.689, rely=0.164, height=18, width=126)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(text='''BIB NUM''')

        self.Scale1 = tk.Scale(self.TNotebook1_t2, from_=0.0, to=100.0)
        self.Scale1.place(relx=0.03, rely=0.164, relwidth=0.228, relheight=0.0
                , height=40, bordermode='ignore')
        self.Scale1.configure(activebackground="#f9f9f9")
        self.Scale1.configure(font="-family {DejaVu Sans} -size 12")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#d9d9d9")

        self.Scale1 = tk.Scale(self.TNotebook1_t2, from_=0.0, to=100.0)
        self.Scale1.place(relx=0.03, rely=0.269, relwidth=0.228, relheight=0.0
                , height=40, bordermode='ignore')
        self.Scale1.configure(activebackground="#f9f9f9")
        self.Scale1.configure(font="-family {DejaVu Sans} -size 12")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#d9d9d9")

        self.Scale1 = tk.Scale(self.TNotebook1_t2, from_=0.0, to=100.0)
        self.Scale1.place(relx=0.03, rely=0.373, relwidth=0.228, relheight=0.0
                , height=40, bordermode='ignore')
        self.Scale1.configure(activebackground="#f9f9f9")
        self.Scale1.configure(font="-family {DejaVu Sans} -size 12")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#d9d9d9")

        self.Checkbutton1 = tk.Checkbutton(self.TNotebook1_t2)
        self.Checkbutton1.place(relx=0.281, rely=0.373, relheight=0.075
                , relwidth=0.083)
        self.Checkbutton1.configure(activebackground="#f9f9f9")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(text='''Auto exposure''')
        self.Checkbutton1.configure(variable=page_generator_testing_notebook_support.che88)

        self.Checkbutton1 = tk.Checkbutton(self.TNotebook1_t2)
        self.Checkbutton1.place(relx=0.289, rely=0.522, relheight=0.075
                , relwidth=0.053)
        self.Checkbutton1.configure(activebackground="#f9f9f9")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(text='''Check''')
        self.Checkbutton1.configure(variable=page_generator_testing_notebook_support.che88)

        self.Checkbutton1 = tk.Checkbutton(self.TNotebook1_t2)
        self.Checkbutton1.place(relx=0.274, rely=0.269, relheight=0.075
                , relwidth=0.076)
        self.Checkbutton1.configure(activebackground="#f9f9f9")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(text='''Auto gain''')
        self.Checkbutton1.configure(variable=page_generator_testing_notebook_support.che88)

        self.Button1 = tk.Button(self.TNotebook1_t2)
        self.Button1.place(relx=0.111, rely=0.045, height=28, width=111)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Load Settings''')

        self.Button1 = tk.Button(self.TNotebook1_t2)
        self.Button1.place(relx=0.215, rely=0.045, height=28, width=119)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Default settings''')

        self.Button1 = tk.Button(self.TNotebook1_t2)
        self.Button1.place(relx=0.015, rely=0.045, height=28, width=109)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''Save Settings''')

        self.Canvas2 = tk.Canvas(self.TNotebook1_t2)
        self.Canvas2.place(relx=0.607, rely=0.134, relheight=0.837
                , relwidth=0.364)
        self.Canvas2.configure(borderwidth="2")
        self.Canvas2.configure(relief='ridge')
        self.Canvas2.configure(selectbackground="#c4c4c4")
        self.Canvas2.configure(width=491)

        self.Button2 = tk.Button(self.TNotebook1_t2)
        self.Button2.place(relx=0.704, rely=0.03, height=58, width=106)
        self.Button2.configure(activebackground="#f9f9f9")
        self.Button2.configure(text='''Stop Preview''')

        self.Button2 = tk.Button(self.TNotebook1_t2)
        self.Button2.place(relx=0.615, rely=0.03, height=58, width=106)
        self.Button2.configure(activebackground="#f9f9f9")
        self.Button2.configure(text='''Start Preview''')

        self.Label1 = tk.Label(self.TNotebook1_t2)
        self.Label1.place(relx=0.03, rely=0.134, height=18, width=77)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(text='''Pixel Clock''')

        self.Label1 = tk.Label(self.TNotebook1_t2)
        self.Label1.place(relx=0.022, rely=0.239, height=18, width=137)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(text='''Gain + Gain boost''')

        self.Label1 = tk.Label(self.TNotebook1_t2)
        self.Label1.place(relx=0.007, rely=0.343, height=18, width=127)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(text='''Exposure time''')

        self.Scale1 = tk.Scale(self.TNotebook1_t2, from_=0.0, to=100.0)
        self.Scale1.place(relx=0.289, rely=0.164, relwidth=0.228, relheight=0.0
                , height=40, bordermode='ignore')
        self.Scale1.configure(activebackground="#f9f9f9")
        self.Scale1.configure(font="-family {DejaVu Sans} -size 12")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#d9d9d9")

        self.Label1 = tk.Label(self.TNotebook1_t2)
        self.Label1.place(relx=0.289, rely=0.134, height=18, width=77)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(text='''Framerate''')

        self.style.configure('TSizegrip', background=_bgcolor)
        self.TSizegrip1 = ttk.Sizegrip(top)
        self.TSizegrip1.place(anchor='se', relx=1.0, rely=1.0)

if __name__ == '__main__':
    vp_start_gui()





